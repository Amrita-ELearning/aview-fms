var URL_INFO = "urlinfo";
var VIDEO_COMMAD = "videocommand";
var PLAY_TIME = "playTime";

function onVideoShareAppStart()
{
	c_n = "onVideoShareAppStart";
	avc_logging("Entered Function",c_n,T_DEBUG);

	// Get the server shared object 'video_so'
	application.video_so = SharedObject.get("vidSO");
	application.info_so = SharedObject.get("infSO");

	// Initialize the unique user ID
	application.nextId = 0;

	// The client will call this function to get the server
	// to accept the message, add the user's name to it, and
	// send it back out to all connected clients.
	Client.prototype.msgFromPrsntrVideoShare = function(url,command,playTime)
	{
		application.video_so.lock();
		application.video_so.setProperty(URL_INFO,url);
		application.video_so.setProperty(VIDEO_COMMAD,command); 
		application.video_so.setProperty(PLAY_TIME,playTime);        
		application.video_so.unlock();
	}
	
	Client.prototype.msgFromClientVideoShare = function(syncstate,uname)
	{
		application.info_so.setProperty(uname,syncstate);
	}

	Client.prototype.muteSound = function(vol)
	{
		application.video_so.setProperty("vol",vol);
		application.video_so.send("controlVol",vol);
	}

	Client.prototype.getPlayheadTimeForLateComingUser = function(uname)
	{
		
		c_n = "timReqLateUser: uname"+uname;
		avc_logging("Entered Function",c_n,T_DEBUG);

		//Getting the presenter's connection
		clientObj = getCurrentActiveClient(currentPresenterName);

		if(clientObj != "")
		{
			avc_logging("Found presenter's connection",c_n,T_DEBUG);
			clientObj.call("getPlayheadTime",null,uname);
		}
	}

	Client.prototype.sendPlayheadTimeToUser = function(sliderTim,uname)
	{
		c_n = "timInfo: uname"+uname+": sliderTim:"+sliderTim;
		avc_logging("Entered Function",c_n,T_DEBUG);

		//Getting the users's connection
		clientObj = getCurrentActiveClient(uname);
        trace("Found client"+clientObj.name)
		if(clientObj != "")
		{
			avc_logging("Found u's connection",c_n,T_DEBUG);
			clientObj.call("getPlayheadTimeForLateComingUser",null,sliderTim,uname);
		}
	}
	
}


function onVideoShareConnect(Client)
{   
	c_n = "onVideoShareConnect Client.name:"+Client.name;
	avc_logging("Entered Function",c_n,T_DEBUG);     
	//application.video_so.setProperty("newClient.name", Client.name );
	//application.info_so.setProperty(Client.name, Client.name );

}

function onVideoShareDisconnect(Client)
{
	c_n = "onVideoShareDisconnect Client.name:"+Client.name;
	avc_logging("Entered Function",c_n,T_DEBUG);

	if(Client.name==currentPresenterName)
	{   
		application.video_so.lock();
		application.video_so.setProperty(VIDEO_COMMAD, null);
		application.video_so.setProperty(PLAY_TIME, null);
        application.video_so.setProperty(URL_INFO,null);
		application.video_so.setProperty("vol",null);
        application.video_so.unlock();
	}
	application.info_so.setProperty(Client.name,null);

}